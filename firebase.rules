rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Helper functions
    function isAuthenticated() {
      return request.auth != null;
    }
    
    function isOwner(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }
    
    // Complaints collection rules
    match /complaints/{complaintId} {
      allow create: if 
        // Allow anonymous complaints
        (request.resource.data.isAnonymous == true && request.resource.data.userId == null) ||
        // Or authenticated user complaints
        (isAuthenticated() && request.resource.data.userId == request.auth.uid);
      
      allow read: if 
        // Allow reading by tracking number for anonymous
        resource.data.trackingNumber != null ||
        // Or by owner for authenticated
        (isAuthenticated() && resource.data.userId == request.auth.uid);
        
      allow update: if isAuthenticated() && (
        // Allow owners to update their complaints
        resource.data.userId == request.auth.uid ||
        // Or admins to update any complaint
        get(/databases/$(database)/documents/profiles/$(request.auth.uid)).data.role == 'admin'
      );
    }
    
    // Storage rules for attachments
    match /storage/{bucket}/files/attachments/{userId}/{fileName} {
      allow write: if 
        // Allow anonymous uploads to anonymous folder
        (userId == 'anonymous') ||
        // Or authenticated uploads to their folder
        (isAuthenticated() && userId == request.auth.uid);
        
      allow read: if true; // Allow public reading of attachments
    }
  }
}